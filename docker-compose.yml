version: '3.4'

services:
  healthmed.api:
    image: ${DOCKER_REGISTRY-}healthmed
    container_name: HealthMed.Api
    build:
      context: .
      dockerfile: HealthMed.Presentation/Dockerfile
    ports:
      - "8080:8080" 
      - "8443:8443"  
    networks:
      - localprom
    volumes:
      - ./https-certificate/certificate.pfx:/app/certificate.pfx
    environment:
      - ASPNETCORE_URLS=http://*:8080;https://*:8443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/src/https-certificatecertificate.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=admin
      - ASPNETCORE_ENVIRONMENT=Production 
  healthmed.api.emailnotificacaoconsumer:
    image: ${DOCKER_REGISTRY-}webjobs/healthmed.notificacoes/healthmed.notificacoes
    container_name: HealthMed.Api.EmailNotificacaoConsumer
    build:
      context: .
      dockerfile: WebJobs/HealthMed.Notificacoes/Dockerfile
    ports:
      - "1001:1001" 
    networks:
      - localprom
    volumes:
      - ./https-certificate/certificate.pfx:/app/certificate.pfx
    environment:
      - ASPNETCORE_URLS=http://*:8080;https://*:8443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/src/https-certificatecertificate.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=admin
  healthmed.api.agendamentosconsumer:
    image: ${DOCKER_REGISTRY-}webjobs/healthmed.agendamentos/healthmed.agendamentos
    container_name: HealthMed.Api.AgendamentosConsumer
    build:
      context: .
      dockerfile: WebJobs/HealthMed.Agendamentos/Dockerfile
    ports:
      - "1002:1002" 
    networks:
      - localprom
    volumes:
      - ./https-certificate/certificate.pfx:/app/certificate.pfx
    environment:
      - ASPNETCORE_URLS=http://*:8080;https://*:8443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/src/https-certificatecertificate.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=admin
  healthmed.api.database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: HealthMed.Api.Database
    environment:
        - SA_PASSWORD=Hackaton2024
        - ACCEPT_EULA=Y
        - MSSQL_PID=Developer
        - MSSQL_TCP_PORT=1433
    ports:
        - "1433:1433"
    networks:
      - localprom
  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - localprom
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/maindashboard.json
    hostname: grafana
    depends_on:
      - prometheus
      - node-exporter
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    ports:
      - 3000:3000 
    networks:
      - localprom
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    privileged: true
    pid: host
    ports:
      - 9100:9100
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/host'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"' 
    networks:
      - localprom
  rabbitMQ:
    image: masstransit/rabbitmq
    container_name: rabbitMQ
    restart: unless-stopped
    privileged: true
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - localprom

networks:
  localprom:
    driver: bridge
